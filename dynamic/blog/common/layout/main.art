<!--
 * @Description: 主页面样式
 * @Author: shenxf
 * @Date: 2019-03-25 21:15:51
 -->
{{include './head.art'}}
<body>
    <div>
        <!-- 头部标签 -->
        {{include './header.art'}}

        <!-- 走马灯标签 -->
        {{if common.hasBanner}}
            {{include './banner.art'}}
        {{/if}}

        <!-- 主体内容 -->
        <div class="container content-wrap">
            <div class="ant-row row" style="margin-left: -12px; margin-right: -12px;">
                <div class="col-xs-24 col-sm-18" style="padding-left: 12px; padding-right: 12px;">
                    <!-- 表示内容 -->
                    {{block 'content'}}{{/block}}
                </div>
                <!-- 右边栏 -->
                {{include './rightSider.art'}}
            </div>
        </div>
    </div>

    <!-- 底部标签 -->
    {{include './footer.art'}}

    <!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) -->
    <script src="js/jquery.min.js"></script>
    <!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 -->
    <script src="js/bootstrap.min.js"></script>
    <!--分页插件-->
    <script src="js/bootstrap-paginator.min.js"></script>

    {{if article}}
    <script>
        let currentPage = 1;
        let pageSize = 3;
        // 调用分页函数.参数:当前所在页, 总页数(用总条数 除以 每页显示多少条,在向上取整), ajax函数
        setPage(currentPage, Math.ceil(31/pageSize), render);
    
        function render() {
            console.log('翻页被点击');
        }

        /**
         *
         * @param pageCurrent 当前所在页
         * @param pageSum 总页数
         * @param callback 调用ajax
         */
            function setPage(pageCurrent, pageSum, callback) {
            $(".pagination").bootstrapPaginator({
                // 设置控件显示的页码数
                numberOfPages: 8,
                // 设置版本号
                bootstrapMajorVersion: 3,
                // 显示第几页
                currentPage: pageCurrent,
                // 总页数
                totalPages: pageSum,
                //当单击操作按钮的时候, 执行该函数, 调用ajax渲染页面
                onPageClicked: function (event,originalEvent,type,page) {
                    // 把当前点击的页码赋值给currentPage, 调用ajax,渲染页面
                    currentPage = page;
                    callback && callback();
                },
                shouldShowPage: function (type, page, current) {
                    var result = true;
                    switch (type) {
                    case "first":
                    case "last":
                        result = false;
                        break;
                    case "prev":
                        result = (current !== 1);
                        break;
                    case "next":
                        result = (current !== this.totalPages);
                        break;
                    case "page":
                        result = true;
                        break;
                    }
                    return result;
                }
            })
        }
    </script>
    {{/if}}
</body>
</html>